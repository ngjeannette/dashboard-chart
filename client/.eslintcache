[{"/Users/jeannetteng/Desktop/dashboard/testing/client/src/App.js":"1","/Users/jeannetteng/Desktop/dashboard/testing/client/src/Component/Line.js":"2","/Users/jeannetteng/Desktop/dashboard/testing/client/src/Component/Nav.js":"3","/Users/jeannetteng/Desktop/dashboard/testing/client/src/reportWebVitals.js":"4","/Users/jeannetteng/Desktop/dashboard/testing/client/src/Component/Bar.js":"5"},{"size":325,"mtime":1606668077698,"results":"6","hashOfConfig":"7"},{"size":1765,"mtime":1606664552566,"results":"8","hashOfConfig":"7"},{"size":515,"mtime":1606664270238,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1606668078119,"results":"10","hashOfConfig":"7"},{"size":1763,"mtime":1606664561008,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l0jw0",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jeannetteng/Desktop/dashboard/testing/client/src/App.js",[],"/Users/jeannetteng/Desktop/dashboard/testing/client/src/Component/Line.js",["23"],"import React, { Component } from \"react\";\nimport Chart from \"chart.js\";\n\nChart.defaults.global.defaultFontFamily = \"'PT Sans', sans-serif\";\nChart.defaults.global.legend.display = false;\nChart.defaults.global.elements.line.tension = 0.2;\n\nexport default class LineGraph extends Component {\n  chartRef = React.createRef();\n\n  componentDidMount() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    const { width: graphWidth } = myChartRef.canvas;\n    let gradientLine = myChartRef.createLinearGradient(0, 0, graphWidth * 2, 0);\n    gradientLine.addColorStop(0, \"#FF006E\");\n    gradientLine.addColorStop(1, \"#F46036\");\n    const { data, color, labels } = this.props.data;\n\n    new Chart(myChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: labels,\n        datasets: [\n          {\n            label: \"sales\",\n            data: data,\n            fill: false,\n            barPercentage: 0.5,\n            barThickness: 6,\n            maxBarThickness: 8,\n            minBarLength: 2,\n            borderColor: \"#6610f2\",\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n\n        scales: {\n          xAxes: [\n            {\n              ticks: { display: true },\n              gridLines: {\n                display: false,\n                drawBorder: true,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              ticks: { display: true },\n              gridLines: {\n                display: false,\n                drawBorder: true,\n              },\n            },\n          ],\n        },\n      },\n    });\n  }\n  render() {\n    return (\n      <div>\n        <canvas id=\"myChart\" ref={this.chartRef} />\n      </div>\n    );\n  }\n}\n","/Users/jeannetteng/Desktop/dashboard/testing/client/src/Component/Nav.js",[],"/Users/jeannetteng/Desktop/dashboard/testing/client/src/reportWebVitals.js",[],"/Users/jeannetteng/Desktop/dashboard/testing/client/src/Component/Bar.js",[],{"ruleId":"24","severity":1,"message":"25","line":17,"column":19,"nodeType":"26","messageId":"27","endLine":17,"endColumn":24},"no-unused-vars","'color' is assigned a value but never used.","Identifier","unusedVar"]